# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-17 15:41
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessToken',
            fields=[
                ('tokenid', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('expire_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=20)),
                ('version', models.CharField(max_length=20)),
                ('date_apply', models.DateTimeField()),
                ('date_version', models.DateTimeField()),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='EmailAuthToken',
            fields=[
                ('tokenid', models.CharField(max_length=48, primary_key=True, serialize=False)),
                ('expire_time', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PointLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True)),
                ('delta', models.IntegerField()),
                ('point', models.IntegerField()),
                ('action', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ResetPWToken',
            fields=[
                ('tokenid', models.CharField(max_length=48, primary_key=True, serialize=False)),
                ('expire_time', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('is_shown', models.BooleanField(default=True)),
                ('alias', models.CharField(max_length=30)),
                ('scope', models.CharField(choices=[('PUBLIC', 'Public'), ('SPARCS', 'SPARCS'), ('TEST', 'Test')], default='TEST', max_length=6)),
                ('main_url', models.CharField(max_length=200)),
                ('login_callback_url', models.CharField(max_length=200)),
                ('unregister_url', models.CharField(blank=True, max_length=200, null=True)),
                ('secret_key', models.CharField(max_length=100)),
                ('cooltime', models.IntegerField()),
                ('icon', models.ImageField(blank=True, null=True, upload_to='')),
                ('admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_services', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceMap',
            fields=[
                ('sid', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('register_time', models.DateTimeField()),
                ('unregister_time', models.DateTimeField(blank=True, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('data', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('time', models.DateTimeField(auto_now=True)),
                ('ip', models.GenericIPAddressField()),
                ('hide', models.BooleanField(default=False)),
                ('text', models.CharField(max_length=500)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=30)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('point', models.IntegerField(default=0)),
                ('point_test', models.IntegerField(default=0)),
                ('email_new', models.EmailField(blank=True, max_length=254, null=True)),
                ('email_authed', models.BooleanField(default=False)),
                ('test_only', models.BooleanField(default=False)),
                ('test_enabled', models.BooleanField(default=False)),
                ('facebook_id', models.CharField(blank=True, max_length=50, null=True)),
                ('twitter_id', models.CharField(blank=True, max_length=50, null=True)),
                ('kaist_id', models.CharField(blank=True, max_length=50, null=True)),
                ('kaist_info', models.TextField(blank=True, null=True)),
                ('kaist_info_time', models.DateField(blank=True, null=True)),
                ('sparcs_id', models.CharField(blank=True, max_length=50, null=True)),
                ('expire_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='pointlog',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Service'),
        ),
        migrations.AddField(
            model_name='pointlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='document',
            unique_together=set([('category', 'version')]),
        ),
        migrations.AddField(
            model_name='accesstoken',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Service'),
        ),
        migrations.AddField(
            model_name='accesstoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
